.. highlight:: csharp

.. _CWinCtrlRadio:

====================
CWinCtrlRadio
====================

 スクリプト: :ref:`RADIO`
 
 ラジオボタンとは、複数のラジオボタン同士をグループ化し、一つがONになるとグループ化されたラジオボタンが自動的にOFFになるボタンです。
 
 :ref:`CHECKBOX` 同様、:ref:`CONTENTS<RADIO_CONTENTS>` を持つことができ、タブボタンとして振る舞うことも可能です。


CWindowBaseに届くコールバック
---------------------------------------------------

.. cpp:function:: void onClick(CWinCtrlBase cCtrl)

 :param CWinCtrlBase cCtrl: タッチされたコントロール

.. cpp:function:: void onHold(CWinCtrlBase cCtrl)

 :param CWinCtrlBase cCtrl: 長押しされたコントロール

.. cpp:function:: void onBeginDrag(CWinCtrlBase cCtrl,Vector2 pos)

 :param CWinCtrlBase cCtrl: ドラッグされたコントロール
 :param Vector2	pos: ドラッグされているタッチ位置、若しくはマウスカーソルの位置(ウィンドウ上)

.. cpp:function:: void onDrag(CWinCtrlBase cCtrl,Vector2 pos,Vector2 dragVelocity)

 :param CWinCtrlBase cCtrl: ドラッグされたコントロール
 :param Vector2	pos: ドラッグされているタッチ位置、若しくはマウスカーソルの位置(ウィンドウ上)
 :param Vector2 dragVelocity: タッチ位置の変位

.. cpp:function:: bool onDragRender(CWinCtrlBase cCtrl,Transform transform)

 :param CWinCtrlBase cCtrl: ドラッグされたコントロール
 :param Transform transform: ドラッグされたコントロールのトランスフォーム
 :return bool: 複製したコントロールをレンダリングするかどうかを選択する。

  * true: ドラッグ中のコントロールの複製をレンダリングする。
  * false: ドラッグ中のコントロールの複製をレンダリングしない。

.. cpp:function:: void onDrop(CWinCtrlBase cCtrl,CWindowBase cDragWindow,CWinCtrlBase cDragCtrl)

 :param CWinCtrlBase cCtrl: ドロップされたコントロール
 :param CWindowBase cDragWindow: ドラッグされたコントロールの含まれるウィンドウ
 :param CWinCtrlBase cDragCtrl: ドラッグされたコントロール
 
 このコールバックは、cCtrlが含まれるウィンドウにコールバックが届く。

.. cpp:function:: void onDropGround(CWinCtrlBase cCtrl)

 :param CWinCtrlBase cCtrl: ドロップされたコントロール

 何もないところでドラッグ中のコントロールが離されたとき呼ばれる。

 また、ドラッグ中のコントロールが含まれるウィンドウが消滅したときにも、消滅する直前に呼び出される。


固有の関数/プロパティ
-------------------------------------------------

.. cpp:member:: bool check

  ラジオボタンの状態を変更します。

   true:
     ON状態にし、グループ化されているラジオボタンに対してOFF状態にする。
     関連付いているコンテンツがあれば、アクティブにします。
   false: 
     OFF状態にし、関連付いているコンテンツがあれば、非アクティブにし表示を抑制します。
 

使用例
-----------------------------

::

 // コントロールを取得する方法.
 CWinCtrlRadio	rdSelect = find<CWinCtrlRadio>(RADIO_Select);

 if (rdSelect.check) {
   ONの状態
 } else {
   OFFの状態
 }
 
 // 押されたときのコールバック
 override protected void onClick(CWinCtrlBase cCtrl) {
     switch (cCtrl.id) {
       case RADIO_Select:
         //押されたときの処理
         break;
     }
 }
 // 長押しされたときのコールバック
 override protected void onHold(CWinCtrlBase cCtrl) {
     switch (cCtrl.id) {
       case RADIO_Select:
         //長押しされたときの処理
         break;
     }
 }
