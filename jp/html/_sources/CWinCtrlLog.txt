.. highlight:: csharp

.. _CWinCtrlLog:

====================
CWinCtrlLog
====================

 スクリプト: :ref:`LOG`

 チャットログのためのコントロールです。
 
 コンテンツを複製し、それを一行とします。
 
 リストボックスと違い、コンテンツの最大数が設定でき、それ以上のコンテンツを追加しようとしたとき、内部で循環(一番古いものが破棄されます)するようになっています。
 
 :ref:`LOGTEXT` 以外のコントロールもコンテンツとして入れることができます。

CWindowBaseに届く :ref:`コールバック<callback>`
-------------------------------------------------

.. cpp:function:: void onDrag(CWinCtrlBase cCtrl,Vector2 pos,Vector2 dragVelocity)

 :param CWinCtrlBase cCtrl: ドラッグされたコントロール
 :param Vector2	pos: ドラッグされているタッチ位置、若しくはマウスカーソルの位置(ウィンドウ上)
 :param Vector2 dragVelocity: タッチ位置の変位

 スクロールしたとき呼び出されます。
 移動を :ref:`ロック<LISTBOX_STYLE>` していてもこのコールバックは呼ばれます。


固有の関数/プロパティ
-------------------------------------------------

.. cpp:function:: void resize(int count)

 :param int count: ログのサイズ
 
 Listboxでは、コンテンツの数に相当しますが、ここでは保持可能な最大ログ数になります。

.. cpp:member:: int count

 Listboxでは、コンテンツリスト内のコンテンツ数になりますが、ここでは保持しているログの数になります。

 resizeで設定した値より、大きくなることはありません。

.. cpp:function:: void clearLog()

 現在保持しているログを全てクリアにし、空にします。

.. _ADD_LOG:

.. cpp:function:: CWinCtrlLogText add(string text,WinColor color)
 
 :param string text: 追加する文字列
 :param WinColor color: 文字列のカラー
 :return CWinCtrlLogText: 文字列を設定したログテキストコントロール
 
 ログを追加するために、まずコンテンツを内部的に追加します(若しくは再利用します)。
 
 そのコンテンツ内から、 :ref:`CWinCtrlLogText` を探し、そのコントロールのキャプションに指定された文字列とカラーを設定します。

 戻り値の :ref:`CWinCtrlLogText` から追加されたコンテンツを取得することができます。
 
::

   CWinCtrlLogText ltChat = lgChat.add(strSentence,WinColor.white);
   //Access to content that contains the added LogText.
   CWinContents contents = ltChat.parent;

..

.. cpp:member:: Vector2 viewsize

 リストボックスのサイズとなります。
 sizeプロパティと同等です。

.. cpp:member:: Vector2 screensize

 リストボックスの仮想画面のサイズです。
 コンテンツリスト内の全ての高さの総和になります。

.. cpp:member:: Vector2 offset

 リストボックスが仮想画面のどこをポイントしているかを表しています。
 値を設定すると一気に移動します。
 滑らかにアニメーションさせながら移動させたいときは、 :ref:`setSmoothOffset<setSmoothOffset>` を使ってください。

.. cpp:member:: bool isSwipe

 スワイプ中かどうか判定します。

.. _setSmoothOffset:

.. cpp:function:: void setSmoothOffset(Vector2 offset,float spd)

 :param Vector2 offset: 設定したい最終オフセット
 :param float spd: 速度
 
 
.. cpp:member:: Vector2 smoothOffset

 0.25の速度で、 :ref:`setSmoothOffset<setSmoothOffset>` したのと同じ振る舞いになります。

.. cpp:member:: bool isSmoothScrolled

 setSmoothOffsetによるスクロールアニメーションかどうかを取得できます。

.. cpp:function:: Vector2 getContentsOffset(int index,e_Anchor eAnchor)
 
 :param int index: 取得したいコンテンツオフセットのインデックス
 :param e_Anchor eAnchor: コンテンツがどの位置に来ることを望むかをアンカーで指定する
 
 特定のコンテンツが指定したアンカー位置に沿って表示されるようなオフセットを取得できます。

 リストボックスが縦方向の時は次の通りです。

 .. list-table::
  :header-rows: 1
  :widths: 10,10

  * - e_Anchor
    - 位置
  * - Bottom,LeftBottom,RightBottom
    - コンテンツが一番下に来るようなオフセット値
  * - Top,LeftTop,RightTop
    - コンテンツが一番上に来るようなオフセット値
  * - Center,Left,Right
    - コンテンツが真ん中に来るようなオフセット値

 リストボックスが横方向の時は次の通りです。

 .. list-table::
  :header-rows: 1
  :widths: 10,10

  * - e_Anchor
    - 位置
  * - Left,LeftBottom,LeftTop
    - コンテンツが一番左に来るようなオフセット値
  * - Right,RightBottom,RightTop
    - コンテンツが一番右に来るようなオフセット値
  * - Center,Top,Bottom
    - コンテンツが真ん中に来るようなオフセット値

.. _CWinCtrlLog_Example:

使用例
-----------------------------

::

 CWinCtrlLog	lgChat = find<CWinCtrlLog>(LOG_Chat);

 lgChat.resize(10);

 string strSentence;
 CWinCtrlLogText ltChat = lgChat.add(strSentence,WinColor.white);

 CWinContents contents = ltChat.parent;

..


ログをクリアする方法
------------------------------

::

 //log clear
 lgChat.clearLog();
